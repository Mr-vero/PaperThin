<template>
  <div id="app">
    <!-- Views/Tabs container -->
    <div class="views tabs safe-areas">
      <!-- Tabbar for switching views-tabs -->
      <div class="toolbar toolbar-bottom tabbar-icons">
        <div class="toolbar-inner">
          <a href="#view-home" class="tab-link tab-link-active">
            <i class="icon f7-icons">square_grid_2x2_fill</i>
            <span class="tabbar-label">Gallery</span>
          </a>
          <a href="#view-collections" class="tab-link">
            <i class="icon f7-icons">rectangle_stack_fill</i>
            <span class="tabbar-label">Collections</span>
          </a>
          <a href="#view-about" class="tab-link">
            <i class="icon f7-icons">info_circle</i>
            <span class="tabbar-label">About</span>
          </a>
        </div>
      </div>

      <!-- Views -->
      <div id="view-home" class="view view-main view-init tab tab-active" data-url="/">
      </div>

      <!-- Collections View -->
      <div id="view-collections" class="view view-init tab" data-name="collections" data-url="/collections/">
      </div>

      <!-- About View -->
      <div id="view-about" class="view view-init tab" data-name="about" data-url="/about/">
      </div>
    </div>
  </div>
</template>
<script>
  export default (props, { $f7, $update }) => {
    // Add this at the start of the component
    const isDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;
    if (isDarkMode) {
      document.documentElement.classList.add('theme-dark');
      document.body.style.backgroundColor = '#121212';
    }

    // Login screen demo data
    let username = '';
    let password = '';

    const updateUsername = (e) => {
      username = e.target.value;
      $update();
    }
    const updatePassword = (e) => {
      password = e.target.value;
      $update();
    }
    const alertLoginData = () => {
      $f7.dialog.alert('Username: ' + username + '<br/>Password: ' + password, () => {
        $f7.loginScreen.close();
      });
    }

    return $render;
  }
</script>
<style>
.toolbar.toolbar-bottom {
  backdrop-filter: none;
  -webkit-backdrop-filter: none;
  border: none;
  box-shadow: none;
  background-color: var(--f7-page-bg-color);
  padding-bottom: env(safe-area-inset-bottom);
  transition: transform 0.3s ease;
}

.toolbar .tab-link {
  transition: all 0.3s ease;
}

.toolbar .tab-link-active {
  transform: scale(1.1);
}

.toolbar .tab-link i.icon {
  font-size: 22px;
  margin-bottom: 2px;
}

.toolbar .tabbar-label {
  font-size: 12px;
  font-weight: 500;
}

/* Add this to prevent white flash */
:root.theme-dark {
  background-color: #121212;
}

body.theme-dark {
  background-color: #121212;
}

/* Dark mode updates */
:root.theme-dark {
  .toolbar.toolbar-bottom {
    background: #000000;
  }
}
</style>
