<template>
  <div class="page" data-name="collections">
    <div class="navbar">
      <div class="navbar-bg"></div>
      <div class="navbar-inner">
        <div class="title">Collections</div>
        <div class="right">
          <a href="#" class="link" @click=${createCollection}>
            <i class="icon f7-icons">plus</i>
          </a>
        </div>
      </div>
    </div>

    <div class="page-content">
      <!-- Collections Grid -->
      <div class="collections-grid" style="padding-top: 80px;">
        ${collections.map((collection) => $h`
          <div class="collection-card" @click=${() => openCollection(collection.id)}>
            <div class="collection-preview ${collection.wallpapers.length === 0 ? 'empty' : ''}">
              ${collection.wallpapers.length > 0 ? 
                collection.wallpapers.slice(0, 4).map((wallpaper) => $h`
                  <div class="preview-item">
                    <img 
                      src="${wallpaper.thumbnailUrl}" 
                      alt="Preview" 
                      loading="lazy"
                      @error=${(e) => handleImageError(e, wallpaper)} 
                    />
                  </div>
                `) : 
                $h`
                  <div class="empty-collection">
                    <i class="icon f7-icons">rectangle_on_rectangle_angled</i>
                  </div>
                `
              }
            </div>
            <div class="collection-info">
              <div class="collection-title">${collection.name}</div>
              <div class="collection-count">${collection.wallpapers.length} wallpapers</div>
            </div>
          </div>
        `)}
      </div>

      ${collections.length === 0 && $h`
        <div class="no-collections">
          <i class="icon f7-icons">rectangle_stack_fill</i>
          <p>No collections yet</p>
          <a href="#" class="button button-fill" @click=${createCollection}>Create Collection</a>
        </div>
      `}
    </div>
  </div>
</template>

<script>
export default (props, { $f7, $store, $on, $update }) => {
  let collections = [];

  // Load collections on mount
  $on('pageInit', () => {
    loadCollections();
  });

  async function loadCollections() {
    collections = await $store.dispatch('fetchCollections');
    $update();
  }

  function createCollection() {
    $f7.dialog.prompt('Collection Name', 'New Collection', async (name) => {
      if (name.trim()) {
        await $store.dispatch('createCollection', { name });
        loadCollections();
      }
    });
  }

  function openCollection(id) {
    $f7.views.current.router.navigate(`/collection/${id}/`);
  }

  function handleImageError(event, wallpaper) {
    const img = event.target;
    if (wallpaper.fallbackUrls && wallpaper.fallbackUrls.length > 0) {
      const currentUrl = img.src;
      const nextUrl = wallpaper.fallbackUrls.find(url => url !== currentUrl);
      if (nextUrl) {
        img.src = nextUrl;
      }
    }
  }

  return $render;
}
</script>

<style>
.collections-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
  gap: 16px;
  padding: 16px;
}

.collection-card {
  background: #fff;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  transition: transform 0.2s ease;
}

.collection-card:active {
  transform: scale(0.98);
}

.collection-preview {
  aspect-ratio: 1;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr;
  gap: 1px;
  background: #eee;
  position: relative;
}

.collection-preview.empty {
  background: #f5f5f5;
}

.preview-item {
  overflow: hidden;
  background: #f5f5f5;
  position: relative;
}

.preview-item img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.empty-collection {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

.empty-collection i {
  font-size: 32px;
  color: #999;
}

.collection-info {
  padding: 12px;
}

.collection-title {
  font-weight: 600;
  margin-bottom: 4px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.collection-count {
  font-size: 12px;
  color: #666;
}

.no-collections {
  text-align: center;
  padding: 32px;
  color: #666;
}

.no-collections .icon {
  font-size: 48px;
  margin-bottom: 16px;
  color: #999;
}

.no-collections p {
  margin: 0 0 16px;
  font-size: 16px;
}

.no-collections .button {
  margin-top: 16px;
}

@media (max-width: 480px) {
  .collections-grid {
    grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
    gap: 12px;
    padding: 12px;
  }
}
</style> 